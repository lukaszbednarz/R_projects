### Read data from string

#```{r}
raw_inp = "2 7
0.18 0.89 109.85
1.0 0.26 155.72
0.92 0.11 137.66
0.07 0.37 76.17
0.85 0.16 139.75
0.99 0.41 162.6
0.87 0.47 151.77
4
0.49 0.18
0.57 0.83
0.56 0.64
0.76 0.18"

inp<-strsplit(raw_inp, "\\n", perl = TRUE)[[1]]


#```

### Process data
#```{r}
l<-as.numeric(strsplit(inp[1],"\\s+",perl = TRUE)[[1]])
F<-l[1]
N<-l[2]

# training data
data.train<-matrix(nrow = N, ncol = 3)


for (i in 1:N){
  data.train[i,]<-as.numeric(strsplit(inp[i+1],"\\s+",perl = TRUE)[[1]])
  
  
}


df.train<-data.frame(data.train)

varnames<-vector()


for (ii in 1:F){
  varnames[ii]<-paste0('var', as.character(ii))  
  
}

names(df.train)<-c(varnames, "HP")

# test data
K<-as.numeric(strsplit(inp[N+2],"\\s+",perl = TRUE)[[1]])


data.test<-matrix(nrow = K, ncol = 2)
for (i in 1:K){
  data.test[i,]<-as.numeric(strsplit(inp[i+N+2],"\\s+",perl = TRUE)[[1]])

}

df.test<-data.frame(data.test)
names(df.test)<-c(varnames)

#```


### Create Linear Regression Model
#```{r}
lm.1<-lm(df.train$HP ~ as.matrix(df.train[varnames]))

par(mfrow = c(2, 2))
#plot(lm.1)

anova(lm.1)



sim<-as.matrix(df.test)%*%as.matrix(lm.1$coefficients[2:3]) + lm.1$coefficients[1]

par(mfrow = c(1,1))

#plot(sim)

writeLines(as.character(round(sim, digits = 3)))