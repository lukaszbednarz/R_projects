{
    "collab_server" : "",
    "contents" : "# lab8.r\t\tscript file lab 8\n#\n# author: Eric Zivot\n# created: November 9, 2009\n# revised: July 31, 2012\n#   fixed problem with yearmon date object\n\noptions(digits=4, width=70)\n\n# load packages\nlibrary(\"PerformanceAnalytics\")\nlibrary(\"zoo\")\n\n################################################################################\n# introduction to portfolio theory\n################################################################################\n\n# source portfolio functions\nsource(file=\"http://spark-public.s3.amazonaws.com/compfinance/R%20code/portfolio.r\")\n\n# load data from class website\nlab8returns.df = read.csv(file=\"http://spark-public.s3.amazonaws.com/compfinance/R%20code/lab8returns.csv\",\n                          stringsAsFactors=FALSE)\n# 7/31/12: fix to problem with the yearmon class\ndates = seq(as.Date(\"1992-07-01\"), as.Date(\"2000-10-01\"), by=\"months\")\nlab8returns.df$Date = dates\n# create zoo object\nlab8returns.z = zoo(lab8returns.df[,-1], lab8returns.df$Date)\nplot(lab8returns.z, lwd=2, col=\"blue\")\n                          \n# compute estimates of CER model and annualize\nmuhat.annual = apply(lab8returns.z,2,mean)*12   \nsigma2.annual = apply(lab8returns.z,2,var)*12\nsigma.annual = sqrt(sigma2.annual)\ncovmat.annual = cov(lab8returns.z)*12 \ncovhat.annual = cov(lab8returns.z)[1,2]*12   \nrhohat.annual = cor(lab8returns.z)[1,2]\n\nmu.b = muhat.annual[\"rboeing\"]\nmu.m = muhat.annual[\"rmsft\"]\nsig2.b =  sigma2.annual[\"rboeing\"]\nsig2.m = sigma2.annual[\"rmsft\"]\nsig.b = sigma.annual[\"rboeing\"]\nsig.m = sigma.annual[\"rmsft\"]\nsig.bm = covhat.annual\nrho.bm = rhohat.annual\n\n\n#\n# 1. create portfolios and plot\n#\nx.b = seq(from=-1, to=2, by=0.1)\nx.m = 1 - x.b\nmu.p = x.b*mu.b + x.m*mu.m\nsig2.p = x.b^2 * sig2.b + x.m^2 * sig2.m + 2*x.b*x.m*sig.bm\nsig.p = sqrt(sig2.p)\n\nplot(sig.p, mu.p, type=\"b\", pch=16, ylim=c(0, max(mu.p)), xlim=c(0, max(sig.p)),\n     xlab=expression(sigma[p]), ylab=expression(mu[p]),\n     col=c(rep(\"green\", 18), rep(\"red\", 13)))\ntext(x=sig.b, y=mu.b, labels=\"Boeing\", pos=4)\ntext(x=sig.m, y=mu.m, labels=\"MSFT\", pos=4)\n\n# now compute portfolios with assets and T-bills as well as Sharpe slopes\n\nr.f = 0.03\n# T-bills + Boeing\nx.b = seq(from=0, to=2, by=0.1)\nmu.p.b = r.f + x.b*(mu.b - r.f)\nsig.p.b = x.b*sig.b\n\n\n# T-bills + MSFT\nx.m = seq(from=0, to=2, by=0.1)\nmu.p.m = r.f + x.m*(mu.m - r.f)\nsig.p.m = x.m*sig.m\n\n\nplot(sig.p, mu.p, type=\"b\", pch=16, ylim=c(0, max(mu.p)), xlim=c(0, max(sig.p)),\n     xlab=expression(sigma[p]), ylab=expression(mu[p]),\n     col=c(rep(\"green\", 18), rep(\"red\", 13)))\ntext(x=sig.b, y=mu.b, labels=\"Boeing\", pos=4)\ntext(x=sig.m, y=mu.m, labels=\"MSFT\", pos=4)\npoints(sig.p.b, mu.p.b, type=\"b\", col=\"blue\")\npoints(sig.p.m, mu.p.m, type=\"b\", col=\"orange\")\n\n\n#\n# 2. compute global minimum variance portfolio\n#\n\ngmin.port = globalMin.portfolio(muhat.annual,\n                                covmat.annual) \ngmin.port\nsummary(gmin.port, risk.free=0.03)\nplot(gmin.port)\n\npie(gmin.port$weights)\n\n\nplot(sig.p, mu.p, type=\"b\", pch=16, ylim=c(0, max(mu.p)), xlim=c(0, max(sig.p)),\n     xlab=expression(sigma[p]), ylab=expression(mu[p]),\n     col=c(rep(\"green\", 18), rep(\"red\", 13)))\ntext(x=sig.b, y=mu.b, labels=\"Boeing\", pos=4)\ntext(x=sig.m, y=mu.m, labels=\"MSFT\", pos=4)\ntext(x=gmin.port$sd, y=gmin.port$er, labels=\"Global min\", pos=2)\n\n#\n# 3. compute tangency portfolio\n#\n\ntan.port = tangency.portfolio(muhat.annual,\n                              covmat.annual,\n                              risk.free=0.03) \ntan.port\nsummary(tan.port,risk.free=0.03)\nplot(tan.port)\npie(tan.port$weights)                              \n\n# T-bills + tangency\nx.t = seq(from=0, to=2, by=0.1)\nmu.p.t = r.f + x.t*(tan.port$er - r.f)\nsig.p.t = x.t*tan.port$sd\n\n\n\nplot(sig.p, mu.p, type=\"b\", pch=16, ylim=c(0, max(mu.p)), xlim=c(0, max(sig.p)),\n     xlab=expression(sigma[p]), ylab=expression(mu[p]),\n     col=c(rep(\"green\", 18), rep(\"red\", 13)))\ntext(x=sig.b, y=mu.b, labels=\"Boeing\", pos=4)\ntext(x=sig.m, y=mu.m, labels=\"MSFT\", pos=4)\ntext(x=tan.port$sd, y=tan.port$er, labels=\"Tangency\", pos=2)\npoints(sig.p.t, mu.p.t, type=\"b\", col=\"blue\", pch=16)\n\n#\n# 4 and 5\n#\n\nx.t = 0.1\nx.f = 1 - x.t\n\nmu.e = r.f + x.t*(tan.port$er - r.f)\nsd.e = x.t*tan.port$sd\n\n\nplot(sig.p, mu.p, type=\"b\", pch=16, ylim=c(0, max(mu.p)), xlim=c(0, max(sig.p)),\n     xlab=expression(sigma[p]), ylab=expression(mu[p]),\n     col=c(rep(\"green\", 18), rep(\"red\", 13)))\ntext(x=sig.b, y=mu.b, labels=\"Boeing\", pos=4)\ntext(x=sig.m, y=mu.m, labels=\"MSFT\", pos=4)\ntext(x=tan.port$sd, y=tan.port$er, labels=\"Tangency\", pos=2)\npoints(sig.p.t, mu.p.t, type=\"b\", col=\"blue\", pch=16)\npoints(sd.e, mu.e, type=\"p\", col=\"orange\", pch=16, cex=2)\ntext(x=sd.e, y=mu.e, labels=\"Efficient Portfolio with 10% Tangency\", pos=4, cex=0.75)\n\n# efficient port with same risk as msft\nx.t = sig.m/tan.port$sd\nmu.e = r.f + x.t*(tan.port$er - r.f)\nsd.e = x.t*tan.port$sd\n\n\nplot(sig.p, mu.p, type=\"b\", pch=16, ylim=c(0, max(mu.p)), xlim=c(0, max(sig.p)),\n     xlab=expression(sigma[p]), ylab=expression(mu[p]),\n     col=c(rep(\"green\", 18), rep(\"red\", 13)))\ntext(x=sig.b, y=mu.b, labels=\"Boeing\", pos=4)\ntext(x=sig.m, y=mu.m, labels=\"MSFT\", pos=4)\ntext(x=tan.port$sd, y=tan.port$er, labels=\"Tangency\", pos=2)\npoints(sig.p.t, mu.p.t, type=\"b\", col=\"blue\", pch=16)\npoints(sd.e, mu.e, type=\"p\", col=\"orange\", pch=16, cex=2)\ntext(x=sd.e, y=mu.e, labels=\"Efficient Portfolio with Same SD as MSFT\", pos=2, cex=0.75)",
    "created" : 1458854453134.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3848393129",
    "id" : "4D270A79",
    "lastKnownWriteTime" : 1367709279,
    "last_content_update" : 1367709279,
    "path" : "~/Intro_to_Computational_Finance/Week8/R_Assignment/lab8.R",
    "project_path" : null,
    "properties" : {
    },
    "relative_order" : 7,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}