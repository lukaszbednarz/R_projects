{
    "collab_server" : "",
    "contents" : "# testport.r\t\t    illustrate portfolio functions in portfolio.r and portfolio_noshorts.r\n# updates: \n# August 15, 2012\n#   updated to cover portfolio functions that impose no short sale constraints\n# August 11, 2011\n#   updated to work with R 2.13.1\nsetwd(\"~/Intro_to_Computational_Finance/Week8/R_Assignment\")\noptions(digits=4, width=70)\nsource(\"http://faculty.washington.edu/ezivot/econ424/portfolio_noshorts.r\")\n# Functions:\n#\t1. efficient.portfolio\t\t\tcompute minimum variance portfolio\n#\t\t\t\t\t\t\t                subject to target return\n#\t2. globalMin.portfolio\t\t\tcompute global minimum variance portfolio\n#\t3. tangency.portfolio\t\t\t  compute tangency portfolio\n#\t4. efficient.frontier\t\t\t  compute Markowitz bullet\n#\t5. getPortfolio\t\t\t\t\t    create portfolio object\n#\n\n#\n# Examples from Introduction to Financial Econometrics\n#\nasset.names = c(\"MSFT\", \"NORD\", \"SBUX\")\ner = c(0.0427, 0.0015, 0.0285)\nnames(er) = asset.names\ncovmat = matrix(c(0.0100, 0.0018, 0.0011,\n\t\t              0.0018, 0.0109, 0.0026,\n\t\t              0.0011, 0.0026, 0.0199),\n\t\t             nrow=3, ncol=3)\nr.free = 0.005\ndimnames(covmat) = list(asset.names, asset.names)\ner\ncovmat\nr.free\n\n#\n# compute equally weighted portfolio\new = rep(1,3)/3\nequalWeight.portfolio = getPortfolio(er=er,cov.mat=covmat,weights=ew)\nclass(equalWeight.portfolio)\nnames(equalWeight.portfolio)\nequalWeight.portfolio\nsummary(equalWeight.portfolio)\nplot(equalWeight.portfolio, col=\"blue\")\n\n#\n# compute global minimum variance portfolio\ngmin.port = globalMin.portfolio(er, covmat)\nattributes(gmin.port)\nprint(gmin.port)\nsummary(gmin.port, risk.free=r.free)\nplot(gmin.port, col=\"blue\")\n\n#\n# compute global minimum variance portfolio with no short sales\ngmin.port.ns = globalMin.portfolio(er, covmat, shorts=FALSE)\nattributes(gmin.port.ns)\nprint(gmin.port.ns)\nsummary(gmin.port.ns, risk.free=r.free)\nplot(gmin.port.ns, col=\"blue\")\n\n\n#\n# compute efficient portfolio subject to target return\ntarget.return = er[\"MSFT\"]\ne.port.msft = efficient.portfolio(er, covmat, target.return)\ne.port.msft\nsummary(e.port.msft, risk.free=r.free)\nplot(e.port.msft, col=\"blue\")\n\n#\n# compute efficient portfolio subject to target return with no short sales\ntarget.return = er[\"MSFT\"]\ne.port.msft.ns = efficient.portfolio(er, covmat, target.return, shorts=FALSE)\ne.port.msft.ns\nsummary(e.port.msft.ns, risk.free=r.free)\nplot(e.port.msft.ns, col=\"blue\")\n\n#\n# compute tangency portfolio\ntan.port <- tangency.portfolio(er, covmat, r.free)\ntan.port\nsummary(tan.port, risk.free=r.free)\nplot(tan.port, col=\"blue\")\n\n#\n# compute tangency portfolio with no short sales\ntan.port.ns <- tangency.portfolio(er, covmat, r.free, shorts=FALSE)\ntan.port.ns\nsummary(tan.port.ns, risk.free=r.free)\nplot(tan.port.ns, col=\"blue\")\n\n#\n# compute portfolio frontier\nef <- efficient.frontier(er, covmat, alpha.min=-2, \n                         alpha.max=1.5, nport=20)\nattributes(ef)\nef\n\nplot(ef)\nplot(ef, plot.assets=TRUE, col=\"blue\", pch=16)\npoints(gmin.port$sd, gmin.port$er, col=\"green\", pch=16, cex=2)\npoints(tan.port$sd, tan.port$er, col=\"red\", pch=16, cex=2)\ntext(gmin.port$sd, gmin.port$er, labels=\"GLOBAL MIN\", pos=2)\ntext(tan.port$sd, tan.port$er, labels=\"TANGENCY\", pos=2)    \nsr.tan = (tan.port$er - r.free)/tan.port$sd\nabline(a=r.free, b=sr.tan, col=\"green\", lwd=2)\n\n\n# plot portfolio frontier with tangency portfolio\nsd.vals = sqrt(diag(covmat))\nmu.vals = er\nplot(ef$sd, ef$er, ylim=c(0, max(ef$er)), xlim=c(0, max(ef$sd)),\n     xlab=\"portfolio sd\", ylab=\"portfolio er\", main=\"Efficient Portfolios\")\ntext(sd.vals, mu.vals, labels=names(mu.vals))\nabline(a=r.free, b=sr.tan)\n\n#\n# compute portfolio frontier with no short sales\nef.ns <- efficient.frontier(er, covmat, alpha.min=0, \n                         alpha.max=1, nport=20, shorts=FALSE)\nattributes(ef.ns)\nef.ns\nsummary(ef.ns)\n\nplot(ef.ns)\nplot(ef.ns, plot.assets=TRUE, col=\"blue\", pch=16)\npoints(gmin.port.ns$sd, gmin.port.ns$er, col=\"green\", pch=16, cex=2)\npoints(tan.port.ns$sd, tan.port.ns$er, col=\"red\", pch=16, cex=2)\ntext(gmin.port.ns$sd, gmin.port.ns$er, labels=\"GLOBAL MIN\", pos=2)\ntext(tan.port.ns$sd, tan.port.ns$er, labels=\"TANGENCY\", pos=2)    \nsr.tan.ns = (tan.port.ns$er - r.free)/tan.port.ns$sd\nabline(a=r.free, b=sr.tan.ns, col=\"green\", lwd=2)\n\n\n# plot portfolio frontier with tangency portfolio\nsd.vals = sqrt(diag(covmat))\nmu.vals = er\nplot(ef.ns$sd, ef.ns$er, ylim=c(0, max(ef.ns$er)), xlim=c(0, max(ef.ns$sd)),\n     xlab=\"portfolio sd\", ylab=\"portfolio er\", main=\"Efficient Portfolios\")\ntext(sd.vals, mu.vals, labels=names(mu.vals))\nabline(a=r.free, b=sr.tan.ns)\n\n\n",
    "created" : 1458854427757.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "4204230044",
    "id" : "5F72B348",
    "lastKnownWriteTime" : 1458854602,
    "last_content_update" : 1458854602046,
    "path" : "~/Intro_to_Computational_Finance/Week8/R_Assignment/testport.R",
    "project_path" : null,
    "properties" : {
        "docOutlineVisible" : "0"
    },
    "relative_order" : 6,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}